#!/usr/bin/env bash
#
# Take a list of text episodes and generate a nice console-compatible table
#
# Inspired by 0x on tiktok and cheat.sh
#
# Author: Dave Eddy <dave@daveeddy.com>
# Date: March 17, 2024
# License: MIT

GRAY_COLOR='\x1b[38;5;8m'
RED_COLOR='\x1b[38;5;9m'
GREEN_COLOR='\x1b[38;5;10m'
YELLOW_COLOR='\x1b[38;5;11m'
BLUE_COLOR='\x1b[38;5;12m'
BOLD_COLOR='\x1b[38;1m'
RST_COLOR='\x1b[38;0m'

TABLE_COLOR=$GRAY_COLOR
HEADER_COLOR=$BOLD_COLOR
TITLE_COLOR=$GREEN_COLOR
DESC_COLOR=$YELLOW_COLOR
LINK_COLOR=$BLUE_COLOR
CODE_COLOR=$RED_COLOR

make-hyphens() {
	local len=$1
	local s
	printf -v s '%*s' "$len" -
	s=${s// /-}
	printf '%s' "$s"
}

make-rule() {
	printf "$TABLE_COLOR+ %s + %s + %s +$RST_COLOR\n" \
		"$(make-hyphens "$max_title")" \
		"$(make-hyphens "$max_desc")" \
		"$(make-hyphens "$max_link")"
}

make-row() {
	local title=$1
	local desc=$2
	local link=$3

	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$TITLE_COLOR %b $RST_COLOR" "$(format-title "$title")"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$DESC_COLOR %b $RST_COLOR" "$(format-desc "$desc")"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$LINK_COLOR %-*s $RST_COLOR" "$max_link" "$link"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf '\n'
}

make-header() {
	local title=$1
	local desc=$2
	local link=$3
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$HEADER_COLOR %-*s $RST_COLOR" "$max_title" "$title"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$HEADER_COLOR %-*s $RST_COLOR" "$max_desc" "$desc"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf "$HEADER_COLOR %-*s $RST_COLOR" "$max_link" "$link"
	printf "$TABLE_COLOR|$RST_COLOR"
	printf '\n'
}

format-title() {
	format-ticks "$1" "$max_title" "$TITLE_COLOR"
}

format-desc() {
	format-ticks "$1" "$max_desc" "$DESC_COLOR"
}

format-ticks() {
	local text=$1
	local max_size=$2
	local rst_color=$3

	local ticks=${text//[^\`]/}
	local num_ticks=${#ticks}
	local len=$(( max_size + num_ticks ))

	local s
	printf -v s '%-*s' "$len" "$text"

	local colors=("$CODE_COLOR" "$rst_color")

	local new_s=''
	local index=0
	local i c
	for ((i = 0; i < ${#s}; i++)); do
		c=${s:i:1}
		if [[ $c == '`' ]]; then
			new_s+="${colors[index]}"
			index=$(((index + 1) % 2))
		else
			new_s+=$c
		fi
	done

	printf '%s' "$new_s"
}

# read episode info from stdin (parse txt file)
index=0
titles=()
descs=()
links=()
while read -r line; do
	case "$index" in
		0)
			title=$line
			num=${line%%.*}
			links+=("http://ysap.daveeddy.com/v/$num")
			titles+=("$title")
			;;
		1) descs+=("$line");;
		2) ;; # links+=("$line");;
		3) ;;
	esac
	index=$(( (index + 1) % 4 ))
done

num_episodes=${#titles[@]}

# figure out the max title, desc, and link
max_title=0
max_desc=0
max_link=0
for ((i = 0; i < num_episodes; i++)); do
	title=${titles[i]//\`/}
	desc=${descs[i]//\`/}
	link=${links[i]}

	(( ${#title} > max_title )) && max_title=${#title}
	(( ${#desc} > max_desc )) && max_desc=${#desc}
	(( ${#link} > max_link )) && max_link=${#link}
done

# generate output!
./make-header
echo
make-rule
make-header 'TITLE' 'DESCRIPTION' 'VIDEO'
make-rule
for ((i = 0; i < num_episodes; i++)); do
	title=${titles[i]}
	desc=${descs[i]}
	link=${links[i]}

	make-row "$title" "$desc" "$link"
done
make-rule
printf "${TABLE_COLOR}last updated: %s${RST_COLOR}\n" "$(TZ=utc date)"
